// <auto-generated />
using IsparkDoluluk.DataAccess.Concrete.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IsparkDoluluk.DataAccess.Migrations
{
    [DbContext(typeof(IsparkDolulukDbContext))]
    [Migration("20210320200438_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("IsparkDoluluk.Entities.Concrete.LiveCapacity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentCapacity")
                        .HasColumnType("int");

                    b.Property<int>("ParkPlaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LiveCapacity");
                });

            modelBuilder.Entity("IsparkDoluluk.Entities.Concrete.ParkPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ParkType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("WorkHours")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("ParkPlaces");
                });
#pragma warning restore 612, 618
        }
    }
}
